import os
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from flask import Flask
from threading import Thread

# –°–æ–∑–¥–∞–µ–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ—Ä—Ç–æ–º
app = Flask('')

@app.route('/')
def home():
    return "Bot is alive!"

def run_flask():
    # –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ –ø–æ—Ä—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç Render
    app.run(host='0.0.0.0', port=int(os.environ.get('PORT', 10000)))

def start_flask():
    t = Thread(target=run_flask)
    t.daemon = True  # –ü–æ—Ç–æ–∫ –±—É–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω –≤–º–µ—Å—Ç–µ —Å –æ—Å–Ω–æ–≤–Ω—ã–º
    t.start()

BOT_TOKEN = os.environ.get('BOT_TOKEN')

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text('üéâ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!')

def main():
    if not BOT_TOKEN:
        print("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return

    # –ó–∞–ø—É—Å–∫–∞–µ–º HTTP-—Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–µ
    start_flask()

    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start_command))
    
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    application.run_polling()

if __name__ == '__main__':
    main()
